
name: CPP API

on:
  push:
    tags:
      - '**'
    branches:
      - '**'
      - '!gh-pages'
    paths:
      - 'cpp/**'
      - '!**.md'
      - '!**docs/**'
  pull_request:
    branches:
      - trunk
    types:
      - opened
      - ready_for_review

jobs:
  test:
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, ubuntu-latest ] #, macOS-10.15]
    steps:
    -
      name: install dependencies ubuntu
      if: contains(matrix.os,'ubuntu')
      run: sudo apt-get update && sudo apt-get install libboost-all-dev libhdf5-dev 
    -
      name: install dependencies macos
      if: contains(matrix.os,'macOS')
      run: brew install boost hdf5
    -
      name: install HighFive
      run: |
        mkdir src
        wget -q -O - \
          https://github.com/BlueBrain/HighFive/archive/refs/tags/v2.6.2.tar.gz |\
          tar -xz --strip-components=1 --directory src
        mkdir src/build
        cd src/build
        cmake -DHIGHFIVE_EXAMPLES=OFF -DHIGHFIVE_UNIT_TESTS=OFF ..
        sudo make install
        cd -
        rm -rf src
    - 
      name: get hdtree
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    -
      name: build hdtree-cpp
      run: |
        cmake -B cpp/build -S cpp
        cmake --build cpp/build
    -
      name: test hdtree-cpp
      run: cmake --build cpp/build --target test
  
  docs:
    if: startsWith(github.ref, 'refs/tags/cpp/v')
    runs-on: ubuntu-latest
    steps:
    -
      name: checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: 'recursive' # for doxygen-awesome-css
    - 
      name: install doxygen
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz
    - 
      name: set version
      run: |
        _version_tag=$(git describe --tags)
        _cmake_version=v$(grep "^[ \t]*VERSION" CMakeLists.txt | sed 's/[^.0-9]*//g')
        if [[ "${_version_tag}" != "${_cmake_version}" ]]; then
          echo "::error::Git version ${_version_tag} does not match CMake version ${_cmake_version}"
        exit 1
        fi
        echo ${_version_tag}
        echo "PROJECT_NUMBER = ${_version_tag}" >> docs/doxyfile
    - 
      name: run doxygen
      run: doxygen cpp/docs/doxyfile
    - 
      name: publish generated content
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_dir: ./cpp/docs/html
        destination_dir: cpp
        enable_jekyll: true
        github_token: ${{ secrets.TOKEN }}
        commit_message: ${{ github.event.head_commit.message }}
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'

